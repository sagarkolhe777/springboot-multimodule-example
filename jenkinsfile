pipeline {
    agent any
    
    environment {
        BRANCH_NAME = 'develop'
	// This can be nexus3 or nexus2
        NEXUS_VERSION = "nexus3"
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running
        NEXUS_URL = "localhost:8081"
        // Repository where we will upload the artifact
        NEXUS_REPOSITORY = "maven-snapshots"
        // Jenkins credential id to authenticate to Nexus OSS
        NEXUS_CREDENTIAL_ID = "nexus-credentials"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: "${BRANCH_NAME}" ]],
                         userRemoteConfigs: [[credentialsId: 'git-hub-credentials', url: 'https://github.com/sagarkolhe777/springboot-multimodule-example.git']]])
                echo "Checkout Done ${BRANCH_NAME}"
            }
        }    
        stage('Compile') {
            steps {
               bat 'mvn clean compile'
               echo "Comile Done ${BRANCH_NAME}"
            }
        }
       // stage("SonarQube Analysis") {
         //   steps {
           //   withSonarQubeEnv('SonarQube') {
             //   bat 'mvn clean package sonar:sonar'
              //  echo 'SonarQube Analysis Done'  
             // }
           // }
        //}
        //stage("Quality Gate") {
          //  steps {
            //  timeout(time: 1, unit: 'HOURS') {
            //    waitForQualityGate abortPipeline: true
            //  }
           // }
        //}
        //stage('Test') {
          //  steps {
            //   bat 'mvn test'
            //   echo "Test Done ${BRANCH_NAME}"
           // }
       // }
        stage('Build') {
            steps {
               bat 'mvn clean install -DskipTests=true'
               echo "Build Done ${BRANCH_NAME}"
            }
        }
	
	
	
	stage("publish to nexus") {
            steps {
	        script {
		   
			
			nexusArtifactUploader artifacts: [
			   [artifactId: 'web-nexus-artifact-uploader', classifier: 'debug', file: 'web/target/web-DEV-1.0-SNAPSHOT.jar', type: 'jar'], 
			   [artifactId: 'core-nexus-artifact-uploader', classifier: 'debug', file: 'core/target/core-DEV-1.0-SNAPSHOT.jar', type: 'jar']
			], 
			credentialsId: NEXUS_CREDENTIAL_ID, 
			groupId: 'sp.sd', 
			nexusUrl: NEXUS_URL, 
			nexusVersion: NEXUS_VERSION, 
			protocol: NEXUS_PROTOCOL, 
			repository: NEXUS_REPOSITORY, 
			version: '2.4'

                   
                }
				
	    
	       //withMaven(mavenSettingsConfig: 'a9ed309e-ba12-43cf-be0b-58bc4665974a'){
                 //bat 'mvn clean deploy'
		 //echo "Publish Done ${BRANCH_NAME}"
               //}
	       
	       // configFileProvider(
                // [configFile(fileId: 'a9ed309e-ba12-43cf-be0b-58bc4665974a', variable: 'MAVEN_SETTINGS')]) {
                //   bat 'mvn -gs $MAVEN_SETTINGS clean package'
		//   echo "Publish Done ${BRANCH_NAME}"
               //}
	       //configFileProvider([configFile(fileId: 'a9ed309e-ba12-43cf-be0b-58bc4665974a', variable: 'MAVEN_SETTINGS_XML')]) { 
	       //bat 'mvn deploy '
               //echo "Publish Done ${BRANCH_NAME}"
	       //}
	  }
	}
    }
    	
    post { 
		always { 
			echo 'One way or another, I have finished'
		}
		aborted{
			sleep(1)
			script{currentBuild.result='ABORTED'}
		}
		failure{
			sleep(1)
			script{currentBuild.result='FAILURE'}
		}
		success{
			sleep(1)
			script{currentBuild.result='SUCCESS'}
		}
	}	
}
