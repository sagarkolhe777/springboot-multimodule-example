pipeline {
    agent any
    
    environment {
        BRANCH_NAME = 'develop'
	// This can be nexus3 or nexus2
        NEXUS_VERSION = "nexus3"
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running
        NEXUS_URL = "localhost:8081"
        // Repository where we will upload the artifact
        NEXUS_REPOSITORY = "maven-snapshots"
        // Jenkins credential id to authenticate to Nexus OSS
        NEXUS_CREDENTIAL_ID = "nexus-credentials"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: "${BRANCH_NAME}" ]],
                         userRemoteConfigs: [[credentialsId: 'git-hub-credentials', url: 'https://github.com/sagarkolhe777/springboot-multimodule-example.git']]])
                echo "Checkout Done ${BRANCH_NAME}"
            }
        }    
        stage('Compile') {
            steps {
               bat 'mvn clean compile'
               echo "Comile Done ${BRANCH_NAME}"
            }
        }
       
        stage('Build') {
            steps {
               bat 'mvn clean install -DskipTests=true'
               echo "Build Done ${BRANCH_NAME}"
            }
        }
	
	
	
	stage("publish to nexus") {
            steps {
	        script {
		       echo "Publish Done ${BRANCH_NAME}"
                       pom = readMavenPom file: "web/pom.xml";
		       corePom = readMavenPom file: "core/pom.xml";
                   
                   
                        echo "*** File:  artifacts: ${pom.artifactId}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
			echo "*** File:  artifacts: ${corePom.artifactId}, group: ${corePom.groupId}, packaging: ${corePom.packaging}, version ${corePom.version}";
                  
			
			nexusArtifactUploader(
                            nexusVersion: NEXUS_VERSION,
                            protocol: NEXUS_PROTOCOL,
                            nexusUrl: NEXUS_URL,
                            groupId: 'example.api',
                            version: pom.version,
                            repository: NEXUS_REPOSITORY,
                            credentialsId: NEXUS_CREDENTIAL_ID,
                            artifacts: [
                                [artifactId: pom.artifactId, classifier: '', file: "web/target/web-DEV-1.0-SNAPSHOT.jar", type: pom.packaging],
                                [artifactId: corePom.artifactId, classifier: '', file: "core/target/core-DEV-1.0-SNAPSHOT.jar", type: pom.packaging]
                            ]
                        );
                }
	  }
	}
    }
    	
    post { 
	aborted{
		sleep(1)
		script{currentBuild.result='ABORTED'}
	}
	failure{
		sleep(1)
		script{currentBuild.result='FAILURE'}
	}
	success{
		sleep(1)
		script{currentBuild.result='SUCCESS'}
	}
    }	
}
